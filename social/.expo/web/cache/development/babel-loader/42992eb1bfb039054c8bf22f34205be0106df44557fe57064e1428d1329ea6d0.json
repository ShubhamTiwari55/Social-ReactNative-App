{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport React, { useContext, useState, useCallback, useEffect } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport FooterMenu from \"../components/Menus/FooterMenu\";\nimport { PostContext } from \"../context/postContext\";\nimport PostCard from \"../components/PostCard\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Home = function Home() {\n  var _useContext = useContext(PostContext),\n    _useContext2 = _slicedToArray(_useContext, 2),\n    posts = _useContext2[0],\n    getAllPosts = _useContext2[1];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    refreshing = _useState2[0],\n    setRefreshing = _useState2[1];\n  useEffect(function () {}, [getAllPosts]);\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    getAllPosts;\n    setTimeout(function () {\n      setRefreshing(false);\n    }, 2000);\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ScrollView, {\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }),\n      children: _jsx(PostCard, {\n        posts: posts\n      })\n    }), _jsx(View, {\n      style: {\n        backgroundColor: \"#ffffff\"\n      },\n      children: _jsx(FooterMenu, {})\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 10,\n    justifyContent: \"space-between\"\n  }\n});\nexport default Home;","map":{"version":3,"names":["React","useContext","useState","useCallback","useEffect","AuthContext","FooterMenu","PostContext","PostCard","jsx","_jsx","jsxs","_jsxs","Home","_useContext","_useContext2","_slicedToArray","posts","getAllPosts","_useState","_useState2","refreshing","setRefreshing","onRefresh","setTimeout","View","style","styles","container","children","ScrollView","refreshControl","RefreshControl","backgroundColor","StyleSheet","create","flex","margin","justifyContent"],"sources":["C:/Users/Hp/Downloads/react-native-fullstack-app-main/social/screens/Home.js"],"sourcesContent":["import {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  RefreshControl,\n} from \"react-native\";\nimport React, { useContext, useState, useCallback, useEffect } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport FooterMenu from \"../components/Menus/FooterMenu\";\nimport { PostContext } from \"../context/postContext\";\nimport PostCard from \"../components/PostCard\";\n\nconst Home = () => {\n  //global state\n  const [posts, getAllPosts] = useContext(PostContext);\n  const [refreshing, setRefreshing] = useState(false);\n  useEffect(() => {}, [getAllPosts]);\n  //refresh controll\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    getAllPosts;\n    setTimeout(() => {\n      setRefreshing(false);\n    }, 2000);\n  }, []);\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        <PostCard posts={posts} />\n        {/* <Text>{JSON.stringify(posts, null, 4)}</Text> */}\n      </ScrollView>\n      <View style={{ backgroundColor: \"#ffffff\" }}>\n        <FooterMenu />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 10,\n    justifyContent: \"space-between\",\n  },\n});\n\nexport default Home;\n"],"mappings":";;;;;;AAOA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC3E,SAASC,WAAW;AACpB,OAAOC,UAAU;AACjB,SAASC,WAAW;AACpB,OAAOC,QAAQ;AAA+B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE9C,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;EAEjB,IAAAC,WAAA,GAA6Bb,UAAU,CAACM,WAAW,CAAC;IAAAQ,YAAA,GAAAC,cAAA,CAAAF,WAAA;IAA7CG,KAAK,GAAAF,YAAA;IAAEG,WAAW,GAAAH,YAAA;EACzB,IAAAI,SAAA,GAAoCjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,SAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChChB,SAAS,CAAC,YAAM,CAAC,CAAC,EAAE,CAACc,WAAW,CAAC,CAAC;EAElC,IAAMK,SAAS,GAAGpB,WAAW,CAAC,YAAM;IAClCmB,aAAa,CAAC,IAAI,CAAC;IACnBJ,WAAW;IACXM,UAAU,CAAC,YAAM;MACfF,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EACN,OACEV,KAAA,CAACa,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BnB,IAAA,CAACoB,UAAU;MACTC,cAAc,EACZrB,IAAA,CAACsB,cAAc;QAACX,UAAU,EAAEA,UAAW;QAACE,SAAS,EAAEA;MAAU,CAAE,CAChE;MAAAM,QAAA,EAEDnB,IAAA,CAACF,QAAQ;QAACS,KAAK,EAAEA;MAAM,CAAE;IAAC,CAEhB,CAAC,EACbP,IAAA,CAACe,IAAI;MAACC,KAAK,EAAE;QAAEO,eAAe,EAAE;MAAU,CAAE;MAAAJ,QAAA,EAC1CnB,IAAA,CAACJ,UAAU,IAAE;IAAC,CACV,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMqB,MAAM,GAAGO,UAAU,CAACC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAezB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}