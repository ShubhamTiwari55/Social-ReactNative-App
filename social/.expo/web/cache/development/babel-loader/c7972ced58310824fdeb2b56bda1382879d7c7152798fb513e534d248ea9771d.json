{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState, useEffect } from \"react\";\nimport FooterMenu from \"../components/Menus/FooterMenu\";\nimport axios from \"axios\";\nimport PostCard from \"../components/PostCard\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Myposts = function Myposts() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var getUserPosts = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var _yield$axios$get = yield axios.get(\"/post/get-user-post\"),\n          data = _yield$axios$get.data;\n        setLoading(false);\n        setPosts(data == null ? void 0 : data.userPosts);\n      } catch (error) {\n        setLoading(false);\n        console.log(error);\n        alert(error);\n      }\n    });\n    return function getUserPosts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getUserPosts();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ScrollView, {\n      children: _jsx(PostCard, {\n        posts: posts,\n        myPostScreen: true\n      })\n    }), _jsx(View, {\n      style: {\n        backgroundColor: \"#ffffff\"\n      },\n      children: _jsx(FooterMenu, {})\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 10,\n    justifyContent: \"space-between\"\n  }\n});\nexport default Myposts;","map":{"version":3,"names":["React","useState","useEffect","FooterMenu","axios","PostCard","jsx","_jsx","jsxs","_jsxs","Myposts","_useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","loading","setLoading","getUserPosts","_ref","_asyncToGenerator","_yield$axios$get","get","data","userPosts","error","console","log","alert","apply","arguments","View","style","styles","container","children","ScrollView","myPostScreen","backgroundColor","StyleSheet","create","flex","margin","justifyContent"],"sources":["C:/Users/Hp/Downloads/react-native-fullstack-app-main/social/screens/Myposts.js"],"sourcesContent":["import { View, Text, ScrollView, StyleSheet } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport FooterMenu from \"../components/Menus/FooterMenu\";\nimport axios from \"axios\";\nimport PostCard from \"../components/PostCard\";\n\nconst Myposts = () => {\n  //state\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  //get user post\n  const getUserPosts = async () => {\n    try {\n      setLoading(true);\n      const { data } = await axios.get(\"/post/get-user-post\");\n      setLoading(false);\n      setPosts(data?.userPosts);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  //initial\n  useEffect(() => {\n    getUserPosts();\n  }, []);\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n        <PostCard posts={posts} myPostScreen={true} />\n        {/* <Text>{JSON.stringify(posts, null, 4)}</Text> */}\n      </ScrollView>\n      <View style={{ backgroundColor: \"#ffffff\" }}>\n        <FooterMenu />\n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 10,\n    justifyContent: \"space-between\",\n  },\n});\nexport default Myposts;\n"],"mappings":";;;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU;AACjB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ;AAA+B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE9C,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAEpB,IAAAC,SAAA,GAA0BV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAA8Bf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAG1B,IAAMG,YAAY;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC/B,IAAI;QACFH,UAAU,CAAC,IAAI,CAAC;QAChB,IAAAI,gBAAA,SAAuBnB,KAAK,CAACoB,GAAG,CAAC,qBAAqB,CAAC;UAA/CC,IAAI,GAAAF,gBAAA,CAAJE,IAAI;QACZN,UAAU,CAAC,KAAK,CAAC;QACjBJ,QAAQ,CAACU,IAAI,oBAAJA,IAAI,CAAEC,SAAS,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdR,UAAU,CAAC,KAAK,CAAC;QACjBS,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClBG,KAAK,CAACH,KAAK,CAAC;MACd;IACF,CAAC;IAAA,gBAXKP,YAAYA,CAAA;MAAA,OAAAC,IAAA,CAAAU,KAAA,OAAAC,SAAA;IAAA;EAAA,GAWjB;EAGD9B,SAAS,CAAC,YAAM;IACdkB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EACN,OACEX,KAAA,CAACwB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B9B,IAAA,CAAC+B,UAAU;MAAAD,QAAA,EACT9B,IAAA,CAACF,QAAQ;QAACS,KAAK,EAAEA,KAAM;QAACyB,YAAY,EAAE;MAAK,CAAE;IAAC,CAEpC,CAAC,EACbhC,IAAA,CAAC0B,IAAI;MAACC,KAAK,EAAE;QAAEM,eAAe,EAAE;MAAU,CAAE;MAAAH,QAAA,EAC1C9B,IAAA,CAACJ,UAAU,IAAE;IAAC,CACV,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AACD,IAAMgC,MAAM,GAAGM,UAAU,CAACC,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AACF,eAAenC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}