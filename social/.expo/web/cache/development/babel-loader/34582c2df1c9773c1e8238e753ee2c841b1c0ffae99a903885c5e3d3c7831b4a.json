{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useContext } from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Home from \"../../screens/Home\";\nimport Register from \"../../screens/auth/Register\";\nimport Login from \"../../screens/auth/Login\";\nimport { AuthContext } from \"../../context/authContext\";\nimport HeaderMenu from \"./HeaderMenu\";\nimport Post from \"../../screens/Post\";\nimport About from \"../../screens/About\";\nimport Account from \"../../screens/Account\";\nimport Myposts from \"../../screens/Myposts\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ScreenMenu = function ScreenMenu() {\n  var _useContext = useContext(AuthContext),\n    _useContext2 = _slicedToArray(_useContext, 1),\n    state = _useContext2[0];\n  var authenticatedUser = (state == null ? void 0 : state.user) && (state == null ? void 0 : state.token);\n  var Stack = createNativeStackNavigator();\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"Login\",\n    children: authenticatedUser ? _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          title: \"Full Stack App\",\n          headerRight: function headerRight() {\n            return _jsx(HeaderMenu, {});\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Post\",\n        component: Post,\n        options: {\n          headerBackTitle: \"Back\",\n          headerRight: function headerRight() {\n            return _jsx(HeaderMenu, {});\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"About\",\n        component: About,\n        options: {\n          headerBackTitle: \"Back\",\n          headerRight: function headerRight() {\n            return _jsx(HeaderMenu, {});\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Account\",\n        component: Account,\n        options: {\n          headerBackTitle: \"Back\",\n          headerRight: function headerRight() {\n            return _jsx(HeaderMenu, {});\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Myposts\",\n        component: Myposts,\n        options: {\n          headerBackTitle: \"Back\",\n          headerRight: function headerRight() {\n            return _jsx(HeaderMenu, {});\n          }\n        }\n      })]\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: Register,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n};\nexport default ScreenMenu;","map":{"version":3,"names":["React","useContext","createNativeStackNavigator","Home","Register","Login","AuthContext","HeaderMenu","Post","About","Account","Myposts","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ScreenMenu","_useContext","_useContext2","_slicedToArray","state","authenticatedUser","user","token","Stack","Navigator","initialRouteName","children","Screen","name","component","options","title","headerRight","headerBackTitle","headerShown"],"sources":["C:/Users/Hp/Downloads/react-native-fullstack-app-main/social/components/Menus/ScreenMenu.js"],"sourcesContent":["import { View, Text } from \"react-native\";\nimport React, { useContext } from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Home from \"../../screens/Home\";\nimport Register from \"../../screens/auth/Register\";\nimport Login from \"../../screens/auth/Login\";\nimport { AuthContext } from \"../../context/authContext\";\nimport HeaderMenu from \"./HeaderMenu\";\nimport Post from \"../../screens/Post\";\nimport About from \"../../screens/About\";\nimport Account from \"../../screens/Account\";\nimport Myposts from \"../../screens/Myposts\";\nconst ScreenMenu = () => {\n  //global state\n  const [state] = useContext(AuthContext);\n  //auth condition true false\n  const authenticatedUser = state?.user && state?.token;\n  const Stack = createNativeStackNavigator();\n  return (\n    <Stack.Navigator initialRouteName=\"Login\">\n      {authenticatedUser ? (\n        <>\n          <Stack.Screen\n            name=\"Home\"\n            component={Home}\n            options={{\n              title: \"Full Stack App\",\n              headerRight: () => <HeaderMenu />,\n            }}\n          />\n          <Stack.Screen\n            name=\"Post\"\n            component={Post}\n            options={{\n              headerBackTitle: \"Back\",\n              headerRight: () => <HeaderMenu />,\n            }}\n          />\n          <Stack.Screen\n            name=\"About\"\n            component={About}\n            options={{\n              headerBackTitle: \"Back\",\n              headerRight: () => <HeaderMenu />,\n            }}\n          />\n          <Stack.Screen\n            name=\"Account\"\n            component={Account}\n            options={{\n              headerBackTitle: \"Back\",\n              headerRight: () => <HeaderMenu />,\n            }}\n          />\n          <Stack.Screen\n            name=\"Myposts\"\n            component={Myposts}\n            options={{\n              headerBackTitle: \"Back\",\n              headerRight: () => <HeaderMenu />,\n            }}\n          />\n        </>\n      ) : (\n        <>\n          <Stack.Screen\n            name=\"Login\"\n            component={Login}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"Register\"\n            component={Register}\n            options={{ headerShown: false }}\n          />\n        </>\n      )}\n    </Stack.Navigator>\n  );\n};\n\nexport default ScreenMenu;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}